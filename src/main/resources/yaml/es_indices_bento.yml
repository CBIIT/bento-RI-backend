  # Indices settings
Indices:
  # First index
  # Name of the index to be created, existing index with same name will be deleted
  - index_name: study_overview
    type: neo4j
    # type mapping for each property of the index
    mapping:
      study_name:
        type: keyword
      study_short_name:
        type: keyword
      study_description:
        type: keyword
      study_type:
        type: keyword
      study_design_type:
        type: keyword
      enrollment_period_start:
        type: keyword
      enrollment_period_end:
        type: keyword
      study_period_start:
        type: keyword
      study_period_end:
        type: keyword
      biopspecimens_collected:
        type: keyword
      study_status:
        type: keyword
      dbGap_id:
        type: keyword
      associated_links:
        type: keyword
      participant_count:
        type: keyword
      max_age:
        type: keyword
      medium_age:
        type: keyword
      min_age:
        type: keyword
      study_race:
        type: keyword
      study_ethnicity:
        type: keyword
      study_sex:
        type: keyword
      country_list:
        type: keyword
      country_count:
        type: keyword
      state_list:
        type: keyword
      state_count:
        type: keyword
      neoplasm_name:
        type: keyword
      neoplasm_count:
        type: keyword
      study_personal:
        type: nested
        properties:
          first_name:
            type: keyword
          last_name:
            type: keyword
          email:
            type: keyword
          person_role:
            type: keyword
      study_publication:
        type: nested
        properties:
          author:
            type: keyword
          title:
            type: keyword
          year:
            type: keyword
          journal:
            type: keyword
          doi:
            type: keyword
          pumID:
            type: keyword
    # Cypher query will be used to retrieve data from Neo4j, and index into Elasticsearch
    cypher_query: "
      MATCH (study:study) 
      MATCH (study_demo:study_demographic)
      MATCH (study_person:study_personnel)
      MATCH (study_pub:publication)
      MATCH (neoplasm:primary_diagnosis)
      MATCH (country:study_country)
      MATCH (state:study_state_province_territory)
      RETURN 
      study.study_name as study_name,
      study.study_short_name as study_short_name,
      study.study_description as study_description,
      study.study_type as study_type,
      study.study_design as study_design_type,
      study.enrollment_beginning_year as enrollment_period_start,
      study.enrollment_ending_year as enrollment_period_end,
      study.study_beginning_year as study_period_start,
      study.study_ending_year as study_period_end,
      study.biospecimen_collection as biopspecimens_collected,
      study.study_status as study_status,
      study.dbgap_accession_id as dbGap_id,
      study.associated_link_name as associated_links,
      study.number_of_participants as participant_count,
      study_demo.study_participant_maximum_age as max_age,
      study_demo.study_participant_median_age as medium_age,
      study_demo.study_participant_minimum_age as min_age,
      study_demo.race as study_race,
      study_demo.ethnicity as study_ethnicity,
      study_demo.sex as study_sex,
      country.study_country as country_list,
      count(Distinct(country.study_country)) as country_count,
      Collect(distinct(state.study_state_province_territory)) as state_list,
      count(distinct(state)) as state_count,
      Collect(distinct(neoplasm.primary_diagnosis_disease_term)) as neoplasm_name,
      count(DISTINCT(neoplasm.primary_diagnosis_disease_term)) as neoplasm_count,
      Collect(DISTINCT{
        first_name: study_person.person_first_name,
        last_name: study_person.person_last_name,
        email: study_person.person_email_address,
        person_role: study_person.person_role
       }) as study_personal,
      Collect(DISTINCT{
        author: study_pub.authorship,
        title: study_pub.publication_title,
        year: study_pub.year_of_publication,
        journal: study_pub.journal_citation,
        doi:study_pub.digital_object_id,
        pumID:study_pub.publication_record_id
       }) as study_publication
      "